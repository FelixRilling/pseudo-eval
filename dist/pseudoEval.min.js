var pseudoEval=function(n){"use strict";const t=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,u=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,i=n=>({val:n,success:null!==n}),c=function(n,t,u,c){const o=n.match(u),e=m(o[1],t),f=m(o[3],t),l=e.success&&f.success?c(e.val,o[2],f.val):null;return i(l)},o=(n,t)=>typeof n===t,e=n=>o(n,"undefined"),f=n=>e(n)||null===n,l=n=>!f(n)&&(o(n,"object")||o(n,"function")),s=(n,t)=>l(n)&&t in n,a=Object.entries,r=n=>new Map(a(n)),E=r({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t}),v=(n,u)=>c(n,u,t,(n,t,u)=>E.has(t)?E.get(t)(n,u):null),N=r({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),_=(n,t)=>c(n,t,u,(n,t,u)=>N.has(t)?N.get(t)(n,u):null),p=/^["'`].*["'`]$/,R=n=>n.substr(1,n.length-2),g=(n,t,u=!1)=>{const i=t.split(/(?:\.|\[|\])+/g).map(n=>p.test(n)?R(n):n);let c=n;let o=null;let e=null;let l=0;for(;!f(c)&&l<i.length;){if(e=i[l],!s(c,e))return null;o=c,c=c[e],l++}return u?{val:c,container:o,key:e,index:l}:c},h=(n,t={},u=!1)=>i(g(t,n,u)),I=r({false:!1,true:!0}),S=function(n,t){let u=null;return u=isNaN(Number(n))?p.test(n)?R(n):I.has(n)?I.get(n):h(n,t).val:Number(n),i(u)},m=function(n,i){const c=n.startsWith("!"),o=c?n.substr(1):n;let e;return e=t.test(o)?v(o,i):u.test(o)?_(o,i):S(o,i),c&&(e.val=!e.val),e};return n.evalExpression=m,n.evalLiteral=S,n.evalVariable=h,n.evalComparison=v,n.evalMath=_,n.getPath=g,n.getStringLiteral=R,n.mapComparison=E,n.mapLiteral=I,n.mapMath=N,n.REGEX_IS_STRING_LITERAL=p,n.REGEX_IS_FUNCTION=/^.+\(.*\)$/,n.REGEX_EXPRESSION_COMPARISON=t,n.REGEX_EXPRESSION_MATH=u,n.REGEX_PATH_SPLIT=/(?:\.|\[|\])+/g,n.REGEX_FUNCTION_CALL_CONTENT=/(.+)\s?\((.*)\)/,n}({});
