var pseudoEval=function(n){"use strict";const t=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,u=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,i=n=>({val:n,success:null!==n}),c=(n,t,u,c)=>{const o=n.match(u);const e=T(o[1],t);const l=T(o[3],t);const s=e.success&&l.success?c(e.val,o[2],l.val):null;return i(s)},o=(n,t)=>typeof n===t,e=n=>o(n,"undefined"),l=n=>!e(n),s=(n,t)=>l(n[t]),f=n=>e(n)||null===n,a=Object.entries,r=Number.isNaN,E=n=>new Map(a(n)),N=E({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t}),v=(n,u)=>c(n,u,t,(n,t,u)=>N.has(t)?N.get(t)(n,u):null),_=E({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),p=(n,t)=>c(n,t,u,(n,t,u)=>_.has(t)?_.get(t)(n,u):null),I=/^["'`].*["'`]$/,R=n=>n.substr(1,n.length-2),g=(n,t,u=!1)=>{const i=t.split(/(?:\.|\[|\])+/g).map(n=>I.test(n)?R(n):n);let c=n;let o=null;let e=null;let l=0;for(;!f(c)&&l<i.length;){if(e=i[l],!s(c,e))return null;o=c,c=c[e],l++}return u?{val:c,container:o,key:e,index:l}:c},h=(n,t={},u=!1)=>i(g(t,n,u)),m=E({false:!1,true:!0,null:null,Infinity:1/0}),S=(n,t)=>{let u=null;u=r(Number(n))?I.test(n)?R(n):m.has(n)?m.get(n):h(n,t).val:Number(n);return i(u)},T=(n,i)=>{const c=n.startsWith("!");const o=c?n.substr(1):n;let e;e=t.test(o)?v(o,i):u.test(o)?p(o,i):S(o,i);c&&(e.val=!e.val);return e};return n.evalExpression=T,n.evalLiteral=S,n.evalVariable=h,n.evalComparison=v,n.evalMath=p,n.getPath=g,n.getStringLiteral=R,n.mapComparison=N,n.mapLiteral=m,n.mapMath=_,n.REGEX_IS_STRING_LITERAL=I,n.REGEX_IS_FUNCTION=/^.+\(.*\)$/,n.REGEX_EXPRESSION_COMPARISON=t,n.REGEX_EXPRESSION_MATH=u,n.REGEX_PATH_SPLIT=/(?:\.|\[|\])+/g,n.REGEX_FUNCTION_CALL_CONTENT=/(.+)\s?\((.*)\)/,n}({});
//# sourceMappingURL=pseudoEval.min.js.map
