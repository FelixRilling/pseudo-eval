var pseudoEval=function(n){"use strict";const t=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,u=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,i=n=>({val:n,success:null!==n}),e=function(n,t,u,e){const o=n.match(u),c=N(o[1],t),l=N(o[3],t),s=c.success&&l.success?e(c.val,o[2],l.val):null;return i(s)},o=(n,t)=>typeof n===t,c=n=>o(n,"undefined"),l=n=>!c(n),s=(n,t)=>l(n[t]),r=n=>c(n)||null===n,a=n=>Object.entries(n),f=n=>!isNaN(Number(n)),g=n=>new Map(a(n)),p=g({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t}),v=(n,u)=>e(n,u,t,(n,t,u)=>p.has(t)?p.get(t)(n,u):null),h=g({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),m=(n,t)=>e(n,t,u,(n,t,u)=>h.has(t)?h.get(t)(n,u):null),x=/^["'`].*["'`]$/,b=n=>n.substr(1,n.length-2),d=(n,t,u=!1)=>{const i=t.split(/(?:\.|\[|\])+/g).map(n=>x.test(n)?b(n):n);let e=n;let o=null;let c=null;let l=0;for(;!r(e)&&l<i.length;){if(c=i[l],!s(e,c))return null;o=e,e=e[c],l++}return u?{val:e,container:o,key:c,index:l}:e},E=function(n,t={},u=!1){const e=d(t,n,u);return i(e)},L=g({false:!1,true:!0,null:null,Infinity:1/0}),M=function(n,t){let u=null;return u=f(n)?Number(n):x.test(n)?b(n):L.has(n)?L.get(n):E(n,t).val,i(u)},N=function(n,i){const e=n.startsWith("!"),o=e?n.substr(1):n;let c;return c=t.test(o)?v(o,i):u.test(o)?m(o,i):M(o,i),e&&(c.val=!c.val),c};return n.evalExpression=N,n.evalLiteral=M,n.evalVariable=E,n.evalComparison=v,n.evalMath=m,n.getPath=d,n.getStringLiteral=b,n.mapComparison=p,n.mapLiteral=L,n.mapMath=h,n.regexExpressionComparison=t,n.regexExpressionMath=u,n.regexIsStringLiteral=x,n.regexPathSplit=/(?:\.|\[|\])+/g,n}({});
