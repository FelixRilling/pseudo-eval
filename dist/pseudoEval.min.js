var pseudoEval=function(n){"use strict";const t=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,e=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,u=n=>({val:n,success:null!==n}),i=function(n,t,e,i){const o=n.match(e),c=M(o[1],t),s=M(o[3],t),l=c.success&&s.success?i(c.val,o[2],s.val):null;return u(l)},o=(n,t)=>typeof n===t,c=n=>o(n,"undefined"),s=n=>!c(n),l=(n,t)=>s(n[t]),a=n=>c(n)||null===n,r=Object.entries,f=n=>!isNaN(Number(n)),g=n=>new Map(r(n)),p=g({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t}),v=(n,e)=>i(n,e,t,(n,t,e)=>p.has(t)?p.get(t)(n,e):null),h=g({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),m=(n,t)=>i(n,t,e,(n,t,e)=>h.has(t)?h.get(t)(n,e):null),x=/^["'`].*["'`]$/,b=n=>n.substr(1,n.length-2),C=(n,t,e=!1)=>{const u=t.split(/(?:\.|\[|\])+/g).map(n=>x.test(n)?b(n):n);let i=n;let o=null;let c=null;let s=0;for(;!a(i)&&s<u.length;){if(c=u[s],!l(i,c))return null;o=i,i=i[c],s++}return e?{val:i,container:o,key:c,index:s}:i},d=(n,t={},e=!1)=>u(C(t,n,e)),E=g({false:!1,true:!0}),L=function(n,t){let e=null;return e=f(n)?Number(n):x.test(n)?b(n):E.has(n)?E.get(n):d(n,t).val,u(e)},M=function(n,u){const i=n.startsWith("!"),o=i?n.substr(1):n;let c;return c=t.test(o)?v(o,u):e.test(o)?m(o,u):L(o,u),i&&(c.val=!c.val),c};return n.evalExpression=M,n.evalLiteral=L,n.evalVariable=d,n.evalComparison=v,n.evalMath=m,n.getPath=C,n.getStringLiteral=b,n.mapComparison=p,n.mapLiteral=E,n.mapMath=h,n.regexExpressionComparison=t,n.regexExpressionMath=e,n.regexIsStringLiteral=x,n.regexPathSplit=/(?:\.|\[|\])+/g,n.regexIsFunction=/^.+\(.*\)$/,n.regexFunctionCallContent=/(.+)\s?\((.*)\)/,n}({});
