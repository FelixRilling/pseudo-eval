var pseudoEval=function(n){"use strict";const t=(n,t)=>typeof n===t,u=n=>t(n,"undefined"),i=n=>u(n)||null===n,e=n=>new Map(Object.entries(n)),c=e({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t}),o=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,r=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,s=n=>n.substr(1,n.length-2),f=e({false:!1,true:!0,null:null}),l=/^["'`].*["'`]$/,a=n=>({val:n,success:null!==n}),E=(n,t,e=!1)=>{const c=t.split(/(?:\.|\[|\])+/g).map(n=>l.test(n)?s(n):n);let o=n;let r=null;let f=null;let a=0;for(;!i(o)&&a<c.length;){if(f=c[a],u(o[f]))return null;r=o,o=o[f],a++}if(e)return{index:a,key:f,val:o,container:r};return o},_=(n,t={},u=!1)=>a(E(t,n,u)),v=(n,t)=>{if(!isNaN(Number(n)))return a(Number(n));if(l.test(n))return a(s(n));if(f.has(n))return a(f.get(n));return a(_(n,t).val)},N=e({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),R=(n,t)=>S(n,t,r,N),p=(n,t)=>{const u=n.startsWith("!");const i=u?n.substr(1):n;let e;e=o.test(i)?I(i,t):r.test(i)?R(i,t):v(i,t);u&&(e.val=!e.val);return e},S=(n,t,u,i)=>{const e=n.match(u);const c=p(e[1],t);const o=p(e[3],t);if(c.success&&o.success&&i.has(e[2])){const n=i.get(e[2]);return a(n(c.val,o.val))}return a(null)},I=(n,t)=>S(n,t,o,c);return n.evalExpression=p,n.evalLiteral=v,n.evalVariable=_,n.evalComparison=I,n.evalMath=R,n.getPathFull=E,n.getStringLiteral=s,n.mapComparison=c,n.mapMath=N,n.mapLiteral=f,n.REGEX_EXPRESSION_COMPARISON=o,n.REGEX_EXPRESSION_MATH=r,n.REGEX_GET_FUNCTION_CALL_ARGS=/(.+)\s?\((.*)\)/,n.REGEX_IS_FUNCTION_CALL=/^.+\(.*\)$/,n.REGEX_IS_STRING_LITERAL=l,n.REGEX_PATH_SPLIT=/(?:\.|\[|\])+/g,n}({});
//# sourceMappingURL=pseudoEval.min.js.map
