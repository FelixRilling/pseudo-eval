var pseudoEval=function(n){"use strict";const t=/^(.+)(===|!==|>=|<=|>|<|&&|\|\|)(.+)$/,u=/^(.+)(\+|-|\*|\*\*|\/|%)(.+)$/,c=n=>({val:n,success:null!==n}),i=(n,t,u,i)=>{const o=n.match(u);const e=L(o[1],t);const l=L(o[3],t);const s=e.success&&l.success?i(e.val,o[2],l.val):null;return c(s)},o=(n,t)=>typeof n===t,e=n=>o(n,"undefined"),l=n=>!e(n),s=(n,t)=>l(n[t]),f=n=>e(n)||null===n,a=Object.entries,r=n=>new Map(a(n)),E=r({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t}),_=(n,u)=>i(n,u,t,(n,t,u)=>E.has(t)?E.get(t)(n,u):null),v=r({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),N=(n,t)=>i(n,t,u,(n,t,u)=>v.has(t)?v.get(t)(n,u):null),R=/^["'`].*["'`]$/,p=n=>n.substr(1,n.length-2),S=(n,t,u=!1)=>{const c=t.split(/(?:\.|\[|\])+/g).map(n=>R.test(n)?p(n):n);let i=n;let o=null;let e=null;let l=0;for(;!f(i)&&l<c.length;){if(e=c[l],!s(i,e))return null;o=i,i=i[e],l++}return u?{index:l,key:e,val:i,container:o}:i},g=(n,t={},u=!1)=>c(S(t,n,u)),h=r({false:!1,true:!0,null:null}),I=(n,t)=>{let u=null;u=isNaN(Number(n))?R.test(n)?p(n):h.has(n)?h.get(n):g(n,t).val:Number(n);return c(u)},L=(n,c)=>{const i=n.startsWith("!");const o=i?n.substr(1):n;let e;e=t.test(o)?_(o,c):u.test(o)?N(o,c):I(o,c);i&&(e.val=!e.val);return e};return n.evalExpression=L,n.evalLiteral=I,n.evalVariable=g,n.evalComparison=_,n.evalMath=N,n.getPathFull=S,n.getStringLiteral=p,n.mapComparison=E,n.mapMath=v,n.mapLiteral=h,n.REGEX_EXPRESSION_COMPARISON=t,n.REGEX_EXPRESSION_MATH=u,n.REGEX_GET_FUNCTION_CALL_ARGS=/(.+)\s?\((.*)\)/,n.REGEX_IS_FUNCTION_CALL=/^.+\(.*\)$/,n.REGEX_IS_STRING_LITERAL=R,n.REGEX_PATH_SPLIT=/(?:\.|\[|\])+/g,n}({});
//# sourceMappingURL=pseudoEval.min.js.map
